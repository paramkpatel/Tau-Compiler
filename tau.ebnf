# THIS IS A STUB FOR THE TAU GRAMMAR FILE THAT STUDENTS WILL CREATE
<< from tau.asts import * >>

grammar: function {function} .

function: "func" ID "(" [parameter {"," parameter}] ")" ":" type compound_statement .

parameter: ID [":" type] .

compound_statement: "{" {variable_declaration | statement} [return_statement] "}" .

variable_declaration: "var" ID ":" type .

statement: if_statement | while_statement | print_statement | call_statement | assignment_statement | compound_statement .

if_statement: "if" expression compound_statement ["else" compound_statement] .

while_statement: "while" expression compound_statement .

print_statement: "print" expression .

call_statement: "call" ID function_call .

assignment_statement: ID [array_index] "=" expression .

return_statement: "return"  [expression] .

expression: logical_or_expression .

logical_or_expression: logical_and_expression {"or" logical_and_expression} .

logical_and_expression: comparison_expression {"and" comparison_expression} .

comparison_expression: addition_expression {comparison_operator addition_expression} .

addition_expression: multiplication_expression {plus_min multiplication_expression} .

multiplication_expression: not_expression {multi_div not_expression} .

not_expression: {"not" | "-"} primary_expression .

primary_expression: INT | boolean | ID [function_call | array_index] | "(" expression ")" .

function_call: "(" [expression {"," expression}] ")" .

array_index: "[" expression "]" [ "[" expression "]" ] .

type: "void" | "int" | "bool" | array_type .

array_type: "[" [INT] "]" "int" .

boolean: "true" | "false" .

comparison_operator: "<" | "<=" | "==" | "!=" | ">" | ">=" .

plus_min: "+" | "-" .

multi_div: "*" | "/" .
